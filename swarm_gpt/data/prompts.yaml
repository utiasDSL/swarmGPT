system_initial:
  You're a helpful assistant that will help a human choreograph a dance for a swarm of small drones.

# We work with cm as the unit of length to avoid breaking up numbers into multiple tokens
# E.g. [1.0, -0.7] -> 10 tokens with splits in 1.0 and 0.7, but [100, -70] -> 6 tokens with no splits
# See https://tiktokenizer.vercel.app/ for prompt analysis
user_initial: >
    Generate the trajectories for a choreography for {num_drones} drones dancing to the music of the
    song {song}. The trajectories are defined by coordinate waypoints that the drones fly to. Each
    waypoint is defined by [x, y, z].  
  
    # Information on the song:
    - Name: {song}
    - Number of beats: {num_beats}
    - Beat times in 100ms: {beat_times}
    - Beat intervals in 100ms: {beat_intervals}
    - Beat amplitude in dBFS: {dbfs}
    - Beat novelty in %: {beat_novelty}
    - Beat chords: {chords}
  
    # Information on the drones:
    - Number: {num_drones}
    - Drones must not collide with each other. No two drones must be at the same coordinates at the same beat.
    - Starting positions: {starting_pos}
    - Maximum step distance between waypoints in cm: {max_distances}
    - Lower limit for generated waypoints: {lim_lower}
    - Upper Limit for generated waypoints: {lim_upper}
    - No drone should be outside of these limits
  
    # Information on the environment:
    - The drones are limited to [-200, 200] in x, [-200, 200] in y, [0, 200] in z
    - The drones must not touch the ground, i.e. their z coordinate must always be greater than 0  

    # Information on the choreography:
    - The drone choreography must have {num_waypoints} waypoints, one for each beat.
    - Each drone must move at least once during the song.
    - Movements must depend on the beats of the song. If the beats are loud and novel, all drones must move.
    - If possible, coordinates for the drones should be symmetrical at each beat.
    - Successive waypoints should form patterns for single drones and for the whole swarm
    - Coordinates are given in cm. A drone flying at 1m height will have a z coordinate of 100.
    - The difference between two waypoints must be less than the maximum step distance in each dimension.
      E.g. if the maximum step distance between beat 3 and 4 is 50, the difference between the x, y,
      z coordinates of the waypoints at beat 3 and 4 must be less than 50 in each dimension.

    # Patterns:
    - Drones must fly in geometric patterns and shapes
    - Drones must fly in tight formations
    - The formations must be symmetrical if possible
    - Drones should move up and down in altitude multiple times for a 3D effect
    - Example patterns include spirals, triangles, squares, circles, lines

    # Response structure
    First, describe the emotions and mood associated with the song {song}. Then, give a description
    of the dominant chords of the song. Is it a major or minor cord? What does that mean for the
    mood? Next, give a specific description of the choreography you want to create. What patterns do
    you want the drones to fly? Why do you use these particular patterns? Last, fill out the
    individual waypoints for each drone. Adapt the distance and position of waypoints to the
    amplitude of the song's beats. Loud beats lead to larger movements, while soft beats lead to
    smaller movements. Furthermore, take into account the dominant chords of the song and the
    emotions and mood associated with these chords.

example: >
    # Example prompts and responses
    - Example 1:
      Prompt:
        # Information on the song:
        - Name: rêverie
        - Number of beats: 22
        - Beat times in 100ms: {{1: 7, 2: 20, 3: 29, 4: 41, 5: 55, 6: 66, 7: 80, 8: 96, 9: 104, 10: 112, 11: 119, 12: 128, 13: 137, 14: 147, 15: 157, 16: 167, 17: 187, 18: 196, 19: 210, 20: 221, 21: 232, 22: 242}}
        - Beat intervals in 100ms: {{1: 7, 2: 13, 3: 9, 4: 12, 5: 14, 6: 11, 7: 13, 8: 16, 9: 9, 10: 7, 11: 8, 12: 8, 13: 9, 14: 10, 15: 10, 16: 10, 17: 20, 18: 8, 19: 14, 20: 12, 21: 10}}
        - Beat amplitude in dBFS: {{1: -53, 2: -40, 3: -40, 4: -39, 5: -44, 6: -44, 7: -36, 8: -43, 9: -34, 10: -35, 11: -37, 12: -37, 13: -39, 14: -44, 15: -38, 16: -32, 17: -35, 18: -34, 19: -33, 20: -37, 21: -35, 22: -38}}
        - Beat novelty in %: {{1: 37, 2: 52, 3: 24, 4: 31, 5: 40, 6: 98, 7: 45, 8: 21, 9: 76, 10: 72, 11: 52, 12: 29, 13: 10, 14: 15, 15: 81, 16: 100, 17: 27, 18: 65, 19: 64, 20: 28, 21: 19, 22: 30}}
        - Beat chords: {{: 'A#m', 2: 'Cm', 3: 'Cm', 4: 'Cm', 5: 'Cm', 6: 'Cm', 7: 'Cm', 8: 'A#m', 9: 'C', 10: 'C', 11: 'C', 12: 'C', 13: 'Cm', 14: 'Cm', 15: 'Gm', 16: 'A#m', 17: 'Gm', 18: 'Gm', 19: 'Gm', 20: 'F', 21: 'F', 22: 'F'}}
      
        # Information on the drones:
        - Number: 3
        - Drones must not collide with each other. No two drones must be at the same coordinates at the same beat.
        - Starting positions: [[100, 100, 100], [-100, 100, 100], [0, -100, 100]]
        - Maximum step distance between waypoints in cm: {{1: 74, 2: 126, 3: 86, 4: 124, 5: 140, 6: 110, 7: 134, 8: 162, 9: 86, 10: 74, 11: 76, 12: 84, 13: 92, 14: 98, 15: 100, 16: 98, 17: 204, 18: 84, 19: 142, 20: 116, 21: 102, 22: 108}}

      Response:
        song_mood: Debussy's Réverie is a short and expressive piano piece that captures the essence of daydreaming and contemplation.
          It is characteristic of Debussy's impressionistic style, known for its use of unconventional harmonies, tonal colors, and fluidity.
        cord_analysis: The song is in the key of F major, with a few chords in the song being A#m, Cm, G, F, and Gm. The mix of major and minor chords indicates that the music is neither elated nor gloomy. It remains in a state of contemplation and daydreaming, with a touch of melancholy.
        choreography_plan: The main intention of the choreography is to reflect the dreamy and contemplative mood of the song. Therefore, drones must not move too fast, and waypoints must not be too far from each other. 
          The beat amplitude in dBFS roughly remains within the -50 to -30 interval, indicating that the song is very quiet. Consequently, the drones should move slowly and gently. Across all beats, the intervals are evenly spaced around 7 to 13, indicating that the drones should move at a steady pace.
          so we have no pause that we have to accentuate in the choreography. We will therefore focus on the beat amplitude.
          For beats 1 to 5, the three drones will spiral to a center point around [0, 0, 100]]. The novelty of the beats is low to moderate at around 25 to 50, and the beat amplitude is also low at around -50 to -40. Thus, we plan the first waypoints closer to each other.
          For the following beats 6 to 11, the novelty of the beats reaches a peak at 98 and a slightly raised beat amplitude of up to -35. To account for the peak, one drone will rise slowly in the center while the other two drones begin to slowly rotate in the other direction and then move outwards. We let the drones move slowly because the amplitude has not yet reached full force. We change the direction of the drones to reflect the dreamy and swirling mood of the song.
          For the next beats 12 to 17, the novelty and amplitudes of the beats are reaching the peak. Accordingly, the drones will move into the triangle formation again, while oscillating in altitude. Although we now move faster, we adhere to the maximum step distance of approximately 80 to 100cm.
          Beats 18 to 22 are the final beats of the song, with decreasing novelty and amplitude. The drones will slowly spiral outwards and downwards to mark the decline in tension and the end of the dance.
        choreography: 
          1: [[100, 100, 100], [-100, 100, 100], [0, -100, 100]]
          2: [[80, 105, 100], [-105, 80, 100], [20, -100, 100]]
          3: [[40, 115, 100], [-115, 40, 100], [60, -80, 100]]
          4: [[0, 120, 100], [-120, 0, 100], [90, -40, 100]]
          5: [[-40, 100, 100], [-100, -40, 100], [100, 0, 100]]
          6: [[-20, 100, 100], [-60, -20, 120], [90, -40, 100]]
          7: [[0, 100, 100], [-20, 0, 140], [60, -80, 100]]
          8: [[30, 90, 100], [0, 0, 160], [20, -100, 100]]
          9: [[60, 60, 100], [0, 0, 180], [-20, -100, 100]]
          10: [[90, 80, 120], [0, 0, 160], [-60, -100, 120]]
          11: [[120, 90, 140], [0, 0, 140], [-100, -100, 140]]
          12: [[150, 100, 160], [0, 0, 120], [-140, -100, 160]]
          13: [[150, 90, 140], [-20, 20, 140], [-150, -90, 140]]
          14: [[120, 80, 160], [-40, 40, 160], [-120, -80, 160]]
          15: [[90, 70, 140], [-60, 60, 180], [-90, -70, 140]]
          16: [[80, 60, 160], [-80, 60, 200], [-80, -60, 160]]
          17: [[80, 60, 180], [-80, 60, 180], [-80, -60, 180]]
          18: [[80, 60, 160], [-80, 60, 160], [-80, -60, 160]]
          19: [[100, 70, 140], [-100, 70, 140], [-40, -70, 140]]
          20: [[120, 80, 120], [-120, 80, 120], [0, -80, 120]]
          21: [[140, 90, 90], [-140, 90, 90], [0, -90, 90]]
          22: [[160, 100, 70], [-160, 100, 70], [0, -100, 70]]]

# Note: Please do not add or remove whitespaces in the prompt. The format is important for the
# tokenizer to produce the same token in different places
output_format: >
  The output should be a YAML string in the following format:  

  ```yaml
    song_mood: str  # Description of the emotions and mood associated with the song
    cord_analysis: str  # Description of the dominant chords and how they relate to the song
    choreography_plan: str  # Description of the planned choreography and how it relates to the song
    choreography:  # Waypoints for the drones at each beat in the song. Drones are indexed from x_1 to x_n
      1: [[drone_1_x, drone_1_y, drone_1_z], [...], [drone_n_x, drone_n_y, drone_n_z]]
      ... 
      m: [[drone_1_x, drone_1_y, drone_1_z], [...], [drone_n_x, drone_n_y, drone_n_z]]  # m'th waypoint  
  ```

  , where x_n is the number of drones and the waypoint list length is equal to the number of beats m
  in the song. It is important you never skip beats and always provide the full list of waypoints
  for each drone! Never skip lines with ... !

example_output: |
    ```yaml
    song_mood: "The Pirates of the Caribbean theme song is rousing and adventurous, invoking feelings of excitement, danger, and the thrill of the high seas. The energetic melody and dynamic rhythms give a sense of swashbuckling daring and epic voyages."

    choreography_plan: "The choreography is designed to reflect the adventurous spirit of the song, emulating the ebb and flow of the sea, the stealth of the pirates, and the grandeur of epic battles. We'll start with simple movements that gradually build up to complex formations, including spirals to symbolize gathering storms, straight fast movements for charges, and gentle floating for calmer moments in the music. The highlights involve synchronized moves for dramatic beats, where all three drones come together to form patterns that complement the song's crescendos and decrescendos."

    choreography: 
      1: [[100, 100, 100], [-100, 100, 100], [0, -100, 100]]
      2: [[80, 80, 100], [-80, 80, 100], [80, -80, 100]]
      3: [[60, 60, 100], [-60, 60, 100], [60, -60, 100]]
      4: [[40, 40, 100], [-40, 40, 100], [40, -40, 100]]
      5: [[20, 20, 100], [-20, 20, 100], [20, -20, 100]]
      6: [[0, 10, 100], [0, -10, 100], [0, 0, 100]]
      7: [[-20, 0, 100], [20, 0, 100], [0, -20, 100]]
      8: [[-40, 0, 100], [40, 0, 100], [0, 40, 100]]
      9: [[-60, 0, 100], [60, 0, 100], [0, -60, 100]]
      10: [[-80, 0, 100], [80, 0, 100], [0, 80, 100]]
      11: [[-100, 0, 100], [100, 0, 100], [0, -100, 100]]
      12: [[-100, 100, 100], [100, 100, 100], [-100, -100, 100]]
      13: [[-80, 80, 100], [80, 80, 100], [-80, -80, 100]]
      14: [[-60, 60, 100], [60, 60, 100], [-60, -60, 100]]
      15: [[-40, 40, 100], [40, 40, 100], [-40, -40, 100]]
      16: [[-20, 20, 100], [20, 20, 100], [-20, -20, 100]]
      17: [[10, 0, 100], [0, -10, 100], [0, 0, 100]]
      18: [[10, -10, 150], [-10, -10, 150], [10, 10, 150]]
      ```
